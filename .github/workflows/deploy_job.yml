name: Deploy Databricks Job

on:
  push:
    branches:
      - dev
      - master
    paths:
      - 'mlops/jobs/**'
      - '.github/workflows/deploy_job.yml'

jobs:
  deploy_job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mlops/jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: pip install --upgrade databricks-cli

      - name: Set Databricks environment
        run: |
          echo "DATABRICKS_HOST=${{ secrets.DATABRICKS_HOST }}" >> $GITHUB_ENV
          echo "DATABRICKS_TOKEN=${{ secrets.DATABRICKS_TOKEN }}" >> $GITHUB_ENV

      - name: Configure Databricks Jobs API
        run: databricks jobs configure --version=2.1

      - name: Inject cluster ID
        env:
          EXISTING_CLUSTER_ID: ${{ secrets.EXISTING_CLUSTER_ID }}
        run: |
          envsubst < predict_job_config.json > tmp.json
          mv tmp.json predict_job_config.json

          envsubst < train_job_config.json > tmp.json
          mv tmp.json train_job_config.json

      - name: Check JSON content
        run: |
          cat predict_job_config.json

          cat train_job_config.json

      - name: Create or update model-inference job
        run: |
          create_or_update_job() {
            JOB_JSON=$1
            JOB_NAME=$(jq -r '.name' $JOB_JSON)
            JOB_ID=$(databricks jobs list --output JSON | jq -r ".jobs[] | select(.settings.name==\"$JOB_NAME\") | .job_id")

            if [ -n "$JOB_ID" ] && [ "$JOB_ID" != "null" ]; then
              databricks jobs reset --job-id "$JOB_ID" --json "$(cat $JOB_JSON)"
              echo "Job reset successfully."
            else
              databricks jobs create --json "$(cat $JOB_JSON)"
              echo "Job created successfully."
            fi
          }

          create_or_update_job mlops/jobs/predict_job_config.json
          create_or_update_job mlops/jobs/train_job_config.json
